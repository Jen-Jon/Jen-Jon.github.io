<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jensen&#39;s Homepage</title>
    <link>https://jen-jon.github.io/posts/</link>
    <description>Recent content in Posts on Jensen&#39;s Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jen-jon.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swift学习(6)-集合类型（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/collectiontype/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/collectiontype/</guid>
      <description>Swift语言提供数组（Array）、集合（Set）和字典（Dictionary）三种基本的集合类型来存储集合数据。数组是有序数据的集。集合</description>
    </item>
    
    <item>
      <title>ML Peach RGB-D Dataset</title>
      <link>https://jen-jon.github.io/posts/ml-peach-rgbd-dataset/</link>
      <pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/ml-peach-rgbd-dataset/</guid>
      <description>Multi-label peach RGB-D dataset (Including RGB images, depth images, infrared images)
Authors: Rao Yuan / Luo Qin / Huo Peilin / Li Yipu / Zhang Jingyao The ML Peach RGB-D Dataset is composed by 2050 multi-modal images of peach on tree filelds captured using Microsoft Azure Kinect DK. Each images contains 3 different modalities, including RGB images, Depth images and Infrared images.
All images were aligned with the RGB image and manually labelled in 4 classes: unobstructed, obscured by foliage, obscured by branches and obscured by fruit.</description>
    </item>
    
    <item>
      <title>Swift学习(5)-字符串和字符（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/stringschars/</link>
      <pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/stringschars/</guid>
      <description>字符串是一系列字符的集合，例如“Hello, world”，“albatross”。Swift的字符串通过String类型来表示。而Strin</description>
    </item>
    
    <item>
      <title>Swift学习(4)-高级运算符（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/advancedop/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/advancedop/</guid>
      <description>除了之前介绍过的基本运算符，Swift还提供了数种可以对数值进行复杂运算的高级运算符。它们包含了在C和Objective-C中已经被大家所熟</description>
    </item>
    
    <item>
      <title>Swift学习(3)-基本运算符（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/swiftbasicop/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/swiftbasicop/</guid>
      <description>运算符是检查、改变、合并值的特殊符号或短语。例如，加号+将两个数组相加（如let i = 1 + 2）。更复杂的运算例子包括逻辑与运算符&amp;amp;&amp;a</description>
    </item>
    
    <item>
      <title>Swift学习(2)-基础部分（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/swiftbase/</link>
      <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/swiftbase/</guid>
      <description>Swift包含了C和Objective-C上所有基础数据类型，Int表示整型值；Double和Float表示浮点值；Bool是布尔型值；St</description>
    </item>
    
    <item>
      <title>Swift学习(1)-初•见（代码完善版）</title>
      <link>https://jen-jon.github.io/posts/swiftfirst/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/swiftfirst/</guid>
      <description>Swift简介 Swift是美国苹果公司推出的编程语言，专门针对苹果桌面操作系统macOS和苹果移动操作系统iOS、iPadOS以及watc</description>
    </item>
    
    <item>
      <title>在Docker中配置代理实现“科学”开发</title>
      <link>https://jen-jon.github.io/posts/dockerproxy/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/dockerproxy/</guid>
      <description>0. 测试0 这里是测试0，文章暂未上传！这里是测试0，文章暂未上传！这里是测试0，文章暂未上传！这里是测试0，文章暂未上传！ 1. 测试1 这里是测试1</description>
    </item>
    
    <item>
      <title>那些五六月的思绪，意难平</title>
      <link>https://jen-jon.github.io/posts/thoughts-in-may/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/thoughts-in-may/</guid>
      <description>也许是因为到了快要离别的季节，最近总感觉丧气爆满！也许是鸣宝回家了，最近我每天都一个人来来往往了？也许是学校里有什么令我不舍的事情？具体是什</description>
    </item>
    
    <item>
      <title>在Ubuntu18.04系统中安装ROS(Robot Operate System)</title>
      <link>https://jen-jon.github.io/posts/rosinstall/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/rosinstall/</guid>
      <description>0. 装前须知 ROS官方发行了许多版本，它们与Ubuntu的发行版本存在对应关如下表： ROS版本 Ubuntu版本 ROS Kinetic Kame Ubuntu 16.04 ROS Melodic Morenia Ubuntu 18.04 ROS Noetic Ninjemys Ubuntu 20.04 因</description>
    </item>
    
    <item>
      <title>The Usage of ADM PV-RCNN</title>
      <link>https://jen-jon.github.io/posts/adm-pv-rcnn/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/adm-pv-rcnn/</guid>
      <description>Note This document mainly introduces the use of ADM PV-RCNN Docker container, details can be seen here.
This Docker container contains a complete pipline working files from LiDAR to algorithm model. This Docker container can process the Pcap format data packets collected by LiDAR. Currently, it only supports data collected by four types of LiDAR produced by Robosense: RS-LiDAR-16, RS-LiDAR-32, RS-LiDAR-64 and RS-LiDAR-128. More brands and types of lidar will be supported in the future.</description>
    </item>
    
    <item>
      <title>逛合肥京东电气超级体验店</title>
      <link>https://jen-jon.github.io/posts/jdmall/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jen-jon.github.io/posts/jdmall/</guid>
      <description>听闻最近京东的全球第二家电器超级体验店开业了，居然在合肥。打开地图搜了搜，发现也不远，坐地铁经过五站就可以到达，目测骑车也就十来分钟的事。 下</description>
    </item>
    
  </channel>
</rss>
